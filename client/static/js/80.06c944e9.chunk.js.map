{"version":3,"file":"static/js/80.06c944e9.chunk.js","mappings":"0SAUe,SAASA,IACtB,IAAMC,GAAOC,EAAAA,EAAAA,IAAYC,EAAAA,IACnBC,GAAWC,EAAAA,EAAAA,MACjBC,GAAiCC,EAAAA,EAAAA,MAAkBC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA5CI,EAAOF,EAAA,GAAIG,EAASH,EAAA,GAATG,WAElBC,EAAAA,EAAAA,YAAU,WACJX,EAAKY,OACPT,EAAS,aAEb,GAAG,CAACH,EAAMG,IAEV,IAAMU,GAASC,EAAAA,EAAAA,IAAU,CACvBC,cAAe,CACbC,MAAO,GACPC,SAAU,IAEZC,SAAS,WAAD,IAAAC,GAAAC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,KAAAC,MAAE,SAAAC,EAAOC,GAAM,OAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACfnB,EAAQe,GAAQ,KAAD,mBAAAE,EAAAG,OAAA,GAAAN,EAAA,KACtB,gBAAAO,GAAA,OAAAX,EAAAY,MAAA,KAAAC,UAAA,EAFQ,GAGTC,iBAAkBC,EAAAA,GAAW,CAC3BlB,MAAOkB,EAAAA,KAAalB,MAAM,yBAAyBmB,SAAS,YAC5DlB,SAAUiB,EAAAA,KAAaC,SAAS,gBAIpC,OACEC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,yEAAwEC,SAAA,EACrFC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,yCAAwCC,UACrDC,EAAAA,EAAAA,KAAA,QAAMF,UAAU,uEAAsEC,SAAC,6BAIzFF,EAAAA,EAAAA,MAACI,EAAAA,GAAI,CAACH,UAAU,yHAAwHC,SAAA,EACtIC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,sDAAqDC,SAAC,yBAGpEF,EAAAA,EAAAA,MAAA,QAAMlB,SAAUL,EAAO4B,aAAaH,SAAA,EAClCF,EAAAA,EAAAA,MAAA,OAAKC,UAAU,6BAA4BC,SAAA,EACzCC,EAAAA,EAAAA,KAACG,EAAAA,GAAK,CAACC,QAAQ,QAAOL,SAAC,gBACvBC,EAAAA,EAAAA,KAACK,EAAAA,IAASC,EAAAA,EAAAA,GAAA,CACRC,GAAG,QACHC,YAAY,mBACZC,KAAK,QACLC,WAAYpC,EAAOqC,OAAOlC,OACtBH,EAAOsC,cAAc,eAG7Bf,EAAAA,EAAAA,MAAA,OAAKC,UAAU,6BAA4BC,SAAA,EACzCC,EAAAA,EAAAA,KAACG,EAAAA,GAAK,CAACC,QAAQ,WAAUL,SAAC,mBAC1BC,EAAAA,EAAAA,KAACK,EAAAA,IAASC,EAAAA,EAAAA,GAAA,CACRC,GAAG,WACHC,YAAY,mDACZC,KAAK,WACLC,WAAYpC,EAAOqC,OAAOjC,UACtBJ,EAAOsC,cAAc,kBAI7BZ,EAAAA,EAAAA,KAAA,OAAKF,UAAU,OAAMC,UACnBC,EAAAA,EAAAA,KAACa,EAAAA,GAAM,CACLJ,KAAK,SACLX,UAAU,uDAAsDC,SACjE,6BAIHC,EAAAA,EAAAA,KAACc,EAAAA,EAAM,CAAC3C,UAAWA,YAK7B,C","sources":["screens/auth/sign-in.tsx"],"sourcesContent":["import { Button, Card, Label, TextInput } from \"flowbite-react\";\nimport { useSelector } from \"react-redux\";\nimport { useNavigate } from \"react-router\";\nimport { selectAuth } from \"store/features/auth\";\nimport { useEffect } from \"react\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport Loader from \"components/Loader\";\nimport { useLoginMutation } from \"store/apis/auth\";\n\nexport default function LoginScreen() {\n  const auth = useSelector(selectAuth);\n  const navigate = useNavigate();\n  const [loginFn, { isLoading }] = useLoginMutation();\n\n  useEffect(() => {\n    if (auth.token) {\n      navigate(\"/dashboard\");\n    }\n  }, [auth, navigate]);\n\n  const formik = useFormik({\n    initialValues: {\n      email: \"\",\n      password: \"\",\n    },\n    onSubmit: async (values) => {\n      await loginFn(values);\n    },\n    validationSchema: Yup.object({\n      email: Yup.string().email(\"Invalid email address\").required(\"Required\"),\n      password: Yup.string().required(\"Required\"),\n    }),\n  });\n\n  return (\n    <div className=\"flex flex-col items-center justify-center px-6 lg:h-screen lg:gap-y-12\">\n      <div className=\"my-6 flex items-center gap-x-1 lg:my-0\">\n        <span className=\"self-center whitespace-nowrap text-2xl font-semibold dark:text-white\">\n          Welcome to Tema Admin\n        </span>\n      </div>\n      <Card className=\"w-full md:max-w-screen-sm [&>img]:hidden md:[&>img]:w-96 md:[&>img]:p-0 md:[&>*]:w-full md:[&>*]:p-16 lg:[&>img]:block\">\n        <h1 className=\"mb-3 text-2xl font-bold dark:text-white md:text-3xl\">\n          Sign in to platform\n        </h1>\n        <form onSubmit={formik.handleSubmit}>\n          <div className=\"mb-4 flex flex-col gap-y-3\">\n            <Label htmlFor=\"email\">Your email</Label>\n            <TextInput\n              id=\"email\"\n              placeholder=\"name@company.com\"\n              type=\"email\"\n              helperText={formik.errors.email}\n              {...formik.getFieldProps(\"email\")}\n            />\n          </div>\n          <div className=\"mb-6 flex flex-col gap-y-3\">\n            <Label htmlFor=\"password\">Your password</Label>\n            <TextInput\n              id=\"password\"\n              placeholder=\"••••••••\"\n              type=\"password\"\n              helperText={formik.errors.password}\n              {...formik.getFieldProps(\"password\")}\n            />\n          </div>\n\n          <div className=\"mb-6\">\n            <Button\n              type=\"submit\"\n              className=\"w-full lg:w-auto bg-primary-900 hover:bg-primary-700\"\n            >\n              Login to your account\n            </Button>\n          </div>\n          <Loader isLoading={isLoading} />\n        </form>\n      </Card>\n    </div>\n  );\n}\n"],"names":["LoginScreen","auth","useSelector","selectAuth","navigate","useNavigate","_useLoginMutation","useLoginMutation","_useLoginMutation2","_slicedToArray","loginFn","isLoading","useEffect","token","formik","useFormik","initialValues","email","password","onSubmit","_onSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","wrap","_context","prev","next","stop","_x","apply","arguments","validationSchema","Yup","required","_jsxs","className","children","_jsx","Card","handleSubmit","Label","htmlFor","TextInput","_objectSpread","id","placeholder","type","helperText","errors","getFieldProps","Button","Loader"],"sourceRoot":""}