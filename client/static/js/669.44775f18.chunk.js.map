{"version":3,"file":"static/js/669.44775f18.chunk.js","mappings":"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","sources":["components/common/ApiError.tsx","components/common/CustomModal.tsx","components/common/FetchingUi.tsx","components/common/QueryDataHandler.tsx","components/folder/CreateFolderForm.tsx","components/folder/Folder.tsx","screens/folder/index.tsx","store/apis/folder/index.ts"],"sourcesContent":["interface IApiError {\n  error?: any;\n}\nconst ApiError = ({ error }: IApiError) => {\n  return <p className=\"text-red-500\">An error occurred</p>;\n};\n\nexport default ApiError;\n","import { Button, Modal } from \"flowbite-react\";\nimport { useState, ReactNode } from \"react\";\n\ninterface IRenderPropsChildrenProps {\n  openModal?: string | undefined;\n  setOpenModal?: React.Dispatch<React.SetStateAction<\"default\" | undefined>>;\n}\n\ntype TRenderPropsChildren = (props: IRenderPropsChildrenProps) => ReactNode;\n\ninterface ICustomModalProps {\n  children: TRenderPropsChildren | React.ReactNode;\n  trigger: JSX.Element;\n  title: string;\n}\n\nexport default function CustomModal({\n  children,\n  trigger,\n  title,\n}: ICustomModalProps) {\n  const [openModal, setOpenModal] = useState<\"default\" | undefined>();\n  console.log(\"type of children: \", typeof children);\n\n  return (\n    <>\n      <span onClick={() => setOpenModal(\"default\")}>{trigger}</span>\n      <Modal\n        show={openModal === \"default\"}\n        onClose={() => setOpenModal(undefined)}\n      >\n        <Modal.Header>{title}</Modal.Header>\n        <Modal.Body>\n          {typeof children === \"function\"\n            ? children({ openModal, setOpenModal })\n            : children}\n        </Modal.Body>\n      </Modal>\n    </>\n  );\n}\n// children({ openModal, setOpenModal })\n","const FetchingUi = () => {\n    return (\n      <p className=\"mr-2 mt-6 flex justify-end text-lg font-bold text-yellow-500\">\n        Please Wait. Fetching....\n      </p>\n    );\n  };\n  \n  export default FetchingUi;","interface IQueryDataHandler {\n  isLoading: boolean;\n  isError: boolean;\n  isSuccess: boolean;\n  isFetching: boolean;\n  ui?: React.ReactNode;\n  fetchingUi?: React.ReactNode;\n  loadingUi?: React.ReactNode;\n  errorUi?: React.ReactNode;\n  paginationUi?: React.ReactNode;\n  [key: string]: any;\n}\nconst QueryDataHandler = (props: IQueryDataHandler) => {\n  const {\n    isLoading,\n    isError,\n    isFetching,\n    isSuccess,\n    ui,\n    loadingUi,\n    fetchingUi,\n    errorUi,\n    paginationUi,\n  } = props;\n  if (isLoading) return <>{loadingUi}</>;\n  if (!isLoading && isError) return <>{errorUi}</>;\n  if (!isLoading && !isError && isFetching && !!fetchingUi)\n    return (\n      <div>\n        {ui}\n        {fetchingUi}\n      </div>\n    );\n  if (!isLoading && !isError && isSuccess && !!paginationUi)\n    return (\n      <>\n        {ui}\n        {paginationUi}\n      </>\n    );\n  if (!isLoading && !isError && isSuccess) return <>{ui}</>;\n  if (!isLoading && !isError && isSuccess) return <>{ui}</>;\n  return (\n    <p className=\"text-red-500\">\n      No condition matched. Logical Error Ocurred. Please contact to developer!\n    </p>\n  );\n};\n\nexport default QueryDataHandler;\n","import { FormikHelpers, useFormik } from \"formik\";\nimport { Button, Label, TextInput } from \"flowbite-react\";\nimport Loader from \"components/Loader\";\nimport * as Yup from \"yup\";\n// import { useNavigate } from \"react-router\";\n// import MySwal from \"components/MySwal\";\n// import { useCreateFolderMutation } from \"store/apis/folder\";\n\ninterface ICreateFolderFormInitialValues {\n  name: string;\n}\n\nexport type TCreateFolderOnSubmit = (\n  values: ICreateFolderFormInitialValues,\n  formikHelpers: FormikHelpers<ICreateFolderFormInitialValues>\n) => void | Promise<any>;\n\ninterface ICreateFolderForm {\n  // setOpenModal?: React.Dispatch<React.SetStateAction<\"default\" | undefined>>;\n  isShowFormTitle?: boolean;\n  onSubmit?: TCreateFolderOnSubmit;\n  isLoading?: boolean;\n}\n\nconst CreateFolderForm = ({\n  isShowFormTitle,\n  onSubmit = async () => {},\n  isLoading,\n}: ICreateFolderForm) => {\n  // const [CreateFolder, { isLoading }] = useCreateFolderMutation();\n  // const navigate = useNavigate();\n\n  const { getFieldProps, handleSubmit, errors, touched } =\n    useFormik<ICreateFolderFormInitialValues>({\n      initialValues: {\n        name: \"\",\n      },\n      onSubmit,\n      validationSchema: Yup.object({\n        name: Yup.string().required(\"Required\"),\n      }),\n    });\n\n  return (\n    <div className=\"grid gap-4\">\n      {isShowFormTitle && (\n        <h2 className=\"text-2xl font-semibold leading-tight text-gray-800 dark:text-white\">\n          Create event\n        </h2>\n      )}\n      <form onSubmit={handleSubmit} className=\"mt-10 grid gap-4\">\n        <div className=\"mb-4 flex flex-col gap-4\">\n          <Label htmlFor=\"folder_name\">File Name</Label>\n          <TextInput\n            id=\"folder_name\"\n            placeholder=\"Enter folder name\"\n            helperText={touched.name && errors.name}\n            {...getFieldProps(\"name\")}\n          />\n        </div>\n\n        <div className=\"mb-6 mt-20\">\n          <Button\n            type=\"submit\"\n            className=\"w-full lg:w-auto bg-primary-900 hover:bg-primary-700\"\n          >\n            Create Folder\n          </Button>\n        </div>\n\n        <Loader isLoading={isLoading as boolean} />\n      </form>\n    </div>\n  );\n};\n\nexport default CreateFolderForm;\n","import { IFolder, THandleDoubleClick } from \"types/folder\";\n\n\ninterface IAFolder {\n  handleFolderDoubleClick?: THandleDoubleClick;\n  folder?: IFolder;\n}\n\nconst Folder = (props: IAFolder) => {\n  const {\n    folder = {\n      _id: \"\",\n      name: \"\",\n      files: [],\n      __v: 0,\n    },\n    handleFolderDoubleClick = () => {},\n  } = props;\n\n  return (\n    <div\n      onClick={(e) => handleFolderDoubleClick(e, folder?._id)}\n      className=\"flex flex-col justify-center items-center gap-1 cursor-pointer hover:opacity-95\"\n    >\n      <img\n        className=\"w-24\"\n        src=\"/Mac_Folder_Icon.png\"\n        alt={`${folder?.name} folder icon`}\n      />\n      <p className=\"text-white w-20 pb-1 break-words\">{folder?.name}</p>\n    </div>\n  );\n};\n\nexport default Folder;\n","import ApiError from \"components/common/ApiError\";\nimport FetchingUi from \"components/common/FetchingUi\";\nimport Loader from \"components/Loader\";\nimport QueryDataHandler from \"components/common/QueryDataHandler\";\nimport { useCreateFolderMutation, useGetFoldersQuery } from \"store/apis/folder\";\nimport { useCallback } from \"react\";\nimport Folder from \"components/folder/Folder\";\nimport { useNavigate } from \"react-router-dom\";\nimport CustomModal from \"components/common/CustomModal\";\nimport { Button } from \"flowbite-react\";\nimport { AiFillFileAdd, AiFillFolderAdd } from \"react-icons/ai\";\nimport CreateFolderForm, {\n  TCreateFolderOnSubmit,\n} from \"components/folder/CreateFolderForm\";\nimport MySwal from \"components/MySwal\";\nimport { THandleDoubleClick } from \"types/folder\";\n\n\n// export interface IFile {\n//   name?: string;\n//   type?: string;\n//   url?: string;\n// }\n\nexport default function FolderList() {\n  const { data, ...restRes } = useGetFoldersQuery();\n  const [createFolder] = useCreateFolderMutation();\n  const navigate = useNavigate();\n\n  const handleFolderDoubleClick: THandleDoubleClick = useCallback((e, id) => {\n    if (e?.detail === 2) {\n      console.log(\"folder double clicked\", e.detail);\n      navigate(`/dashboard/folders/${id}`);\n    }\n  }, []);\n\n  return (\n    <div className=\"space-y-4\">\n      <div className=\"flex justify-start gap-2\">\n        <CustomModal\n          title=\"Add Folder\"\n          trigger={\n            <Button\n              // onClick={handleFolderAdd}\n              type=\"button\"\n              color=\"light\"\n            >\n              <AiFillFolderAdd className=\"w-5 h-5 fill-[#69CAF7] cursor-pointer mr-1\" />{\" \"}\n              Add Folder\n            </Button>\n          }\n        >\n          {({ setOpenModal }) => {\n            const onSubmit: TCreateFolderOnSubmit = async (values) => {\n              try {\n                await createFolder({\n                  name: values.name,\n                }).unwrap();\n                MySwal.fire({\n                  title: \"Success\",\n                  text: \"Folder added successfully\",\n                  icon: \"success\",\n                });\n                setOpenModal?.(undefined);\n              } catch (error: any) {\n                MySwal.fire({\n                  title: \"Error\",\n                  text: error?.data?.message || \"Something went wrong\",\n                  icon: \"error\",\n                });\n              }\n            };\n\n            return (\n              <CreateFolderForm\n                // isLoading={isLoading}\n                onSubmit={onSubmit}\n              />\n            );\n          }}\n        </CustomModal>\n      </div>\n      <QueryDataHandler\n        {...restRes}\n        ui={\n          <div className=\"flex flex-wrap gap-4\">\n            {data?.data?.map((folder) => {\n              return (\n                <Folder\n                  folder={folder}\n                  handleFolderDoubleClick={handleFolderDoubleClick}\n                />\n              );\n            })}\n          </div>\n        }\n        loadingUi={<Loader isLoading={restRes?.isLoading} />}\n        fetchingUi={<FetchingUi />}\n        errorUi={<ApiError />}\n      />\n    </div>\n  );\n}\n","import {\n    ICreateFolderArg,\n    ICreateFolderRes,\n    IFileDeleteArgs,\n    IFoldersData,\n    IViewFolderORFileData,\n    TViewFolderORFileDataArg,\n} from \"types/folder\";\nimport { apiSlice } from \"..\";\n\nexport const folderApiSlice = apiSlice.injectEndpoints({\n    endpoints: (builder) => ({\n        createFolder: builder.mutation<ICreateFolderRes, ICreateFolderArg>({\n            query: (body) => ({\n                url: \"/folders\",\n                method: \"POST\",\n                body,\n            }),\n            invalidatesTags: [\"folders\"],\n        }),\n        // new\n        createNewFolder: builder.mutation({\n            query: (body) => ({\n                url: `/folders`,\n                method: \"POST\",\n                body,\n            }),\n            invalidatesTags: [\"folders\"],\n        }),\n        getFolders: builder.query<IFoldersData, void>({\n            query: () => ({\n                url: \"/folders?noParent=true\",\n                method: \"GET\",\n            }),\n            providesTags: [\"folders\"],\n        }),\n        getFolderById: builder.query<\n            IViewFolderORFileData,\n            TViewFolderORFileDataArg\n        >({\n            query: (id) => ({\n                url: `/folders/${id}`,\n                method: \"GET\",\n            }),\n            providesTags: [\"folders\"],\n        }),\n        updateFolder: builder.mutation({\n            query: ({ id, ...body }) => ({\n                url: `/folders/${id}`,\n                method: \"PUT\",\n                body,\n            }),\n            invalidatesTags: [\"folders\"],\n        }),\n        uploadFile: builder.mutation({\n            query: ({ id, ...body }) => ({\n                url: `/folders/files/${id}`,\n                method: \"POST\",\n                body,\n            }),\n            invalidatesTags: [\"folders\"],\n        }),\n        deleteAFile: builder.mutation<any, IFileDeleteArgs>({\n            query: ({ folderId, fileId }) => ({\n                url: `/folders/delete-files`,\n                body: { folderId, fileId },\n                method: \"POST\",\n            }),\n            invalidatesTags: [\"folders\"],\n        }),\n        deleteFolder: builder.mutation({\n            query: (id) => ({\n                url: `/folders/${id}`,\n                method: \"DELETE\",\n            }),\n            invalidatesTags: [\"folders\"],\n        }),\n    }),\n});\n\nexport const {\n    useCreateFolderMutation,\n    useGetFoldersQuery,\n    useGetFolderByIdQuery,\n    useUpdateFolderMutation,\n    useDeleteFolderMutation,\n    useUploadFileMutation,\n    useCreateNewFolderMutation,\n    useDeleteAFileMutation,\n} = folderApiSlice;\n"],"names":["_ref","error","_jsx","className","children","CustomModal","trigger","title","_useState","useState","_useState2","_slicedToArray","openModal","setOpenModal","console","log","_jsxs","_Fragment","onClick","Modal","show","onClose","undefined","Header","Body","props","isLoading","isError","isFetching","isSuccess","ui","loadingUi","fetchingUi","errorUi","paginationUi","isShowFormTitle","_ref$onSubmit","onSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","stop","_useFormik","useFormik","initialValues","name","validationSchema","Yup","required","getFieldProps","handleSubmit","errors","touched","Label","htmlFor","TextInput","_objectSpread","id","placeholder","helperText","Button","type","Loader","_props$folder","folder","_id","files","__v","_props$handleFolderDo","handleFolderDoubleClick","e","src","alt","concat","FolderList","_data$data","_useGetFoldersQuery","useGetFoldersQuery","data","restRes","_objectWithoutProperties","_excluded","_useCreateFolderMutat","useCreateFolderMutation","createFolder","navigate","useNavigate","useCallback","detail","color","AiFillFolderAdd","_ref2","values","_error$data","unwrap","MySwal","fire","text","icon","t0","message","_x","apply","arguments","CreateFolderForm","QueryDataHandler","map","Folder","FetchingUi","ApiError","folderApiSlice","apiSlice","injectEndpoints","endpoints","builder","mutation","query","body","url","method","invalidatesTags","createNewFolder","getFolders","providesTags","getFolderById","updateFolder","uploadFile","_excluded2","deleteAFile","_ref3","folderId","fileId","deleteFolder","useGetFolderByIdQuery","useUploadFileMutation","useUpdateFolderMutation","useDeleteFolderMutation","useCreateNewFolderMutation","useDeleteAFileMutation"],"sourceRoot":""}