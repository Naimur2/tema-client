{"version":3,"file":"static/js/468.55268c5b.chunk.js","mappings":"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","sources":["screens/team/edit-team.tsx","store/apis/team/index.ts","store/apis/uploadImage/index.ts"],"sourcesContent":["import React from \"react\";\nimport { useFormik } from \"formik\";\nimport { Button, FileInput, Label, TextInput } from \"flowbite-react\";\nimport Loader from \"components/Loader\";\nimport {\n    useCreateTeamMutation,\n    useGetTeamByIdQuery,\n    useUpdateTeamMutation,\n} from \"store/apis/team\";\nimport * as Yup from \"yup\";\nimport { useNavigate } from \"react-router\";\nimport MySwal from \"components/MySwal\";\nimport { useUploadImageMutation } from \"store/apis/uploadImage\";\nimport { useParams } from \"react-router-dom\";\nimport { ITeamInitialValues } from \"types/team\";\n\n// interface IEditTeamInitialValue {\n//   name: \"\";\n//   color: \"\";\n//   score: 0;\n//   image: undefined;\n// }\n\nexport default function CreateTeam() {\n    const [addItem, { isLoading }] = useUpdateTeamMutation();\n    const [uploadImage, { isLoading: isUploading }] = useUploadImageMutation();\n    const id = useParams().id;\n\n    const { data } = useGetTeamByIdQuery(id, {\n        skip: !id,\n    });\n\n    const navigate = useNavigate();\n    const { getFieldProps, handleSubmit, setFieldValue, errors, touched } =\n        useFormik<ITeamInitialValues>({\n            initialValues: {\n                name: \"\",\n                color: \"\",\n                score: 0,\n                image: undefined,\n            },\n            onSubmit: async (values: any) => {\n                try {\n                    const formData = new FormData();\n                    formData.append(\"image\", values.image);\n\n                    const { data } = await uploadImage(formData).unwrap();\n\n                    const submitedValue = {\n                        name: values.name,\n                        color: values.color,\n                        score: values.score,\n                        image: data?.[0].fileUrl,\n                        id,\n                    };\n\n                    await addItem(submitedValue).unwrap();\n                    MySwal.fire({\n                        title: \"Success\",\n                        text: \"Team updated successfully\",\n                        icon: \"success\",\n                    });\n                    navigate(-1);\n                } catch (error: any) {\n                    MySwal.fire({\n                        title: \"Error\",\n                        text: error?.data?.message || \"Something went wrong\",\n                        icon: \"error\",\n                    });\n                }\n            },\n            validationSchema: Yup.object({\n                name: Yup.string().required(\"Required\"),\n                color: Yup.string().required(\"Required\"),\n                score: Yup.string().required(\"Required\"),\n                image: Yup.string().required(\"Required\"),\n            }),\n        });\n\n    React.useEffect(() => {\n        if (data) {\n            setFieldValue(\"name\", data?.data?.name);\n            setFieldValue(\"color\", data?.data?.color);\n            setFieldValue(\"score\", data?.data?.score);\n            // convert image url to file\n            if (data?.data?.image) {\n                fetch(data?.data?.image)\n                    .then((res) => res.blob())\n                    .then((blob) => {\n                        const file = new File([blob], \"image.png\", {\n                            type: \"image/png\",\n                        });\n                        setFieldValue(\"image\", file);\n                    });\n            }\n            console.log(data?.data?.image);\n        }\n    }, [data]);\n\n    return (\n        <div className=\"grid gap-4\">\n            <h2 className=\"text-2xl font-semibold leading-tight text-gray-800 dark:text-white\">\n                Edit Team\n            </h2>\n            <form onSubmit={handleSubmit} className=\"mt-10\">\n                <div className=\"mb-4 flex flex-col\">\n                    <Label htmlFor=\"name\">Team Name</Label>\n                    <TextInput\n                        id=\"name\"\n                        placeholder=\"Enter team name\"\n                        helperText={touched.name && errors.name}\n                        {...getFieldProps(\"name\")}\n                    />\n                </div>\n                <div className=\"mb-4 flex flex-col\">\n                    <Label htmlFor=\"color\">Team color</Label>\n                    <input\n                        id=\"color\"\n                        placeholder=\"Enter team color\"\n                        className=\"w-full  border border-gray-300 rounded-md h-10\"\n                        type=\"color\"\n                        {...getFieldProps(\"color\")}\n                    />\n                    {touched.color && errors.color && (\n                        <p className=\"text-red-500\">{errors.color}</p>\n                    )}\n                </div>\n\n                <div className=\"mb-4 flex flex-col\">\n                    <Label htmlFor=\"score\">Team score</Label>\n                    <TextInput\n                        id=\"score\"\n                        placeholder=\"Enter team score\"\n                        helperText={touched.score && errors.score}\n                        type=\"number\"\n                        {...getFieldProps(\"score\")}\n                    />\n                </div>\n\n                <div className=\"mb-4 flex flex-col\">\n                    <Label htmlFor=\"image\">Team image</Label>\n                    <input\n                        className=\"block w-full cursor-pointer rounded-lg border border-gray-300 bg-gray-50 text-sm text-gray-900 focus:outline-none dark:border-gray-600 dark:bg-gray-700 dark:text-gray-400 dark:placeholder-gray-400\"\n                        id=\"file_input\"\n                        type=\"file\"\n                        name=\"image\"\n                        accept=\"image/*\"\n                        onChange={(event: any) => {\n                            setFieldValue(\n                                \"image\",\n                                event.currentTarget.files[0]\n                            );\n                        }}\n                        // value={formik?.values?.image?.name}\n                    />\n                    {touched.image && errors.image && (\n                        <p className=\"text-red-500\">{errors.image}</p>\n                    )}\n                </div>\n\n                <div className=\"mb-6 mt-20\">\n                    <Button\n                        type=\"submit\"\n                        className=\"w-full lg:w-auto bg-primary-900 hover:bg-primary-700\"\n                    >\n                        Edit Team\n                    </Button>\n                </div>\n                <Loader isLoading={isLoading || isUploading} />\n            </form>\n        </div>\n    );\n}\n","import {\n  ICreateTeamRes,\n  TDeleteTeamArg,\n  IDeleteTeamResponse,\n  ITeamData,\n  ITeamsData,\n  IUpdateTeamArgs,\n  IUpdateTeamRes,\n  TCreateTeamArgs,\n  TTeamDataArg,\n} from \"types/team\";\nimport { apiSlice } from \"..\";\n\nexport const teamApiSlice = apiSlice.injectEndpoints({\n  endpoints: (builder) => ({\n    createTeam: builder.mutation<ICreateTeamRes, TCreateTeamArgs>({\n      query: (body) => ({\n        url: \"/teams\",\n        method: \"POST\",\n        body,\n      }),\n      invalidatesTags: [\"teams\"],\n    }),\n    getTeams: builder.query<ITeamsData, void>({\n      query: () => ({\n        url: \"/teams\",\n        method: \"GET\",\n      }),\n      providesTags: [\"teams\"],\n    }),\n    getTeamById: builder.query<ITeamData, TTeamDataArg>({\n      query: (id) => ({\n        url: `/teams/${id}`,\n        method: \"GET\",\n      }),\n      providesTags: [\"teams\"],\n    }),\n    updateTeam: builder.mutation<IUpdateTeamRes, IUpdateTeamArgs>({\n      query: ({ id, ...body }) => ({\n        url: `/teams/${id}`,\n        method: \"PUT\",\n        body,\n      }),\n      invalidatesTags: [\"teams\"],\n    }),\n    deleteTeam: builder.mutation<IDeleteTeamResponse, TDeleteTeamArg>({\n      query: (id) => ({\n        url: `/teams/${id}`,\n        method: \"DELETE\",\n      }),\n      invalidatesTags: [\"teams\"],\n    }),\n  }),\n});\n\nexport const {\n  useCreateTeamMutation,\n  useGetTeamsQuery,\n  useGetTeamByIdQuery,\n  useUpdateTeamMutation,\n  useDeleteTeamMutation,\n} = teamApiSlice;\n","import { apiSlice } from \"..\";\n\nexport const uploadImage = apiSlice.injectEndpoints({\n  endpoints: (builder) => ({\n    uploadImage: builder.mutation({\n      query: (body) => ({\n        url: \"/files/upload-image\",\n        method: \"POST\",\n        body,\n      }),\n    }),\n  }),\n});\n\nexport const { useUploadImageMutation } = uploadImage;\n"],"names":["CreateTeam","_useUpdateTeamMutatio","useUpdateTeamMutation","_useUpdateTeamMutatio2","_slicedToArray","addItem","isLoading","_useUploadImageMutati","useUploadImageMutation","_useUploadImageMutati2","uploadImage","isUploading","id","useParams","data","useGetTeamByIdQuery","skip","navigate","useNavigate","_useFormik","useFormik","initialValues","name","color","score","image","undefined","onSubmit","_onSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","formData","_yield$uploadImage$un","_data","submitedValue","_error$data","wrap","_context","prev","next","FormData","append","unwrap","sent","fileUrl","MySwal","fire","title","text","icon","t0","message","stop","_x","apply","arguments","validationSchema","Yup","required","getFieldProps","handleSubmit","setFieldValue","errors","touched","React","_data$data","_data$data2","_data$data3","_data$data4","_data$data6","_data$data5","fetch","then","res","blob","file","File","type","console","log","_jsxs","className","children","_jsx","Label","htmlFor","TextInput","_objectSpread","placeholder","helperText","accept","onChange","event","currentTarget","files","Button","Loader","teamApiSlice","apiSlice","injectEndpoints","endpoints","builder","createTeam","mutation","query","body","url","method","invalidatesTags","getTeams","providesTags","getTeamById","concat","updateTeam","_ref","_objectWithoutProperties","_excluded","deleteTeam","useCreateTeamMutation","useGetTeamsQuery","useDeleteTeamMutation"],"sourceRoot":""}