{"version":3,"file":"static/js/190.7fecf48a.chunk.js","mappings":"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","sources":["components/common/ApiError.tsx","components/common/CustomModal.tsx","components/common/FetchingUi.tsx","components/common/QueryDataHandler.tsx","components/folder/CreateFolderForm.tsx","components/folder/Folder.tsx","components/folder/CreateFileForm.tsx","utils/file-formatter.ts","screens/folder/view-folder.tsx","store/apis/folder/index.ts","store/apis/uploadImage/index.ts"],"sourcesContent":["interface IApiError {\n  error?: any;\n}\nconst ApiError = ({ error }: IApiError) => {\n  return <p className=\"text-red-500\">An error occurred</p>;\n};\n\nexport default ApiError;\n","import { Button, Modal } from \"flowbite-react\";\nimport { useState, ReactNode } from \"react\";\n\ninterface IRenderPropsChildrenProps {\n  openModal?: string | undefined;\n  setOpenModal?: React.Dispatch<React.SetStateAction<\"default\" | undefined>>;\n}\n\ntype TRenderPropsChildren = (props: IRenderPropsChildrenProps) => ReactNode;\n\ninterface ICustomModalProps {\n  children: TRenderPropsChildren | React.ReactNode;\n  trigger: JSX.Element;\n  title: string;\n}\n\nexport default function CustomModal({\n  children,\n  trigger,\n  title,\n}: ICustomModalProps) {\n  const [openModal, setOpenModal] = useState<\"default\" | undefined>();\n  console.log(\"type of children: \", typeof children);\n\n  return (\n    <>\n      <span onClick={() => setOpenModal(\"default\")}>{trigger}</span>\n      <Modal\n        show={openModal === \"default\"}\n        onClose={() => setOpenModal(undefined)}\n      >\n        <Modal.Header>{title}</Modal.Header>\n        <Modal.Body>\n          {typeof children === \"function\"\n            ? children({ openModal, setOpenModal })\n            : children}\n        </Modal.Body>\n      </Modal>\n    </>\n  );\n}\n// children({ openModal, setOpenModal })\n","const FetchingUi = () => {\n    return (\n      <p className=\"mr-2 mt-6 flex justify-end text-lg font-bold text-yellow-500\">\n        Please Wait. Fetching....\n      </p>\n    );\n  };\n  \n  export default FetchingUi;","interface IQueryDataHandler {\n  isLoading: boolean;\n  isError: boolean;\n  isSuccess: boolean;\n  isFetching: boolean;\n  ui?: React.ReactNode;\n  fetchingUi?: React.ReactNode;\n  loadingUi?: React.ReactNode;\n  errorUi?: React.ReactNode;\n  paginationUi?: React.ReactNode;\n  [key: string]: any;\n}\nconst QueryDataHandler = (props: IQueryDataHandler) => {\n  const {\n    isLoading,\n    isError,\n    isFetching,\n    isSuccess,\n    ui,\n    loadingUi,\n    fetchingUi,\n    errorUi,\n    paginationUi,\n  } = props;\n  if (isLoading) return <>{loadingUi}</>;\n  if (!isLoading && isError) return <>{errorUi}</>;\n  if (!isLoading && !isError && isFetching && !!fetchingUi)\n    return (\n      <div>\n        {ui}\n        {fetchingUi}\n      </div>\n    );\n  if (!isLoading && !isError && isSuccess && !!paginationUi)\n    return (\n      <>\n        {ui}\n        {paginationUi}\n      </>\n    );\n  if (!isLoading && !isError && isSuccess) return <>{ui}</>;\n  if (!isLoading && !isError && isSuccess) return <>{ui}</>;\n  return (\n    <p className=\"text-red-500\">\n      No condition matched. Logical Error Ocurred. Please contact to developer!\n    </p>\n  );\n};\n\nexport default QueryDataHandler;\n","import { FormikHelpers, useFormik } from \"formik\";\nimport { Button, Label, TextInput } from \"flowbite-react\";\nimport Loader from \"components/Loader\";\nimport * as Yup from \"yup\";\n// import { useNavigate } from \"react-router\";\n// import MySwal from \"components/MySwal\";\n// import { useCreateFolderMutation } from \"store/apis/folder\";\n\ninterface ICreateFolderFormInitialValues {\n  name: string;\n}\n\nexport type TCreateFolderOnSubmit = (\n  values: ICreateFolderFormInitialValues,\n  formikHelpers: FormikHelpers<ICreateFolderFormInitialValues>\n) => void | Promise<any>;\n\ninterface ICreateFolderForm {\n  // setOpenModal?: React.Dispatch<React.SetStateAction<\"default\" | undefined>>;\n  isShowFormTitle?: boolean;\n  onSubmit?: TCreateFolderOnSubmit;\n  isLoading?: boolean;\n}\n\nconst CreateFolderForm = ({\n  isShowFormTitle,\n  onSubmit = async () => {},\n  isLoading,\n}: ICreateFolderForm) => {\n  // const [CreateFolder, { isLoading }] = useCreateFolderMutation();\n  // const navigate = useNavigate();\n\n  const { getFieldProps, handleSubmit, errors, touched } =\n    useFormik<ICreateFolderFormInitialValues>({\n      initialValues: {\n        name: \"\",\n      },\n      onSubmit,\n      validationSchema: Yup.object({\n        name: Yup.string().required(\"Required\"),\n      }),\n    });\n\n  return (\n    <div className=\"grid gap-4\">\n      {isShowFormTitle && (\n        <h2 className=\"text-2xl font-semibold leading-tight text-gray-800 dark:text-white\">\n          Create event\n        </h2>\n      )}\n      <form onSubmit={handleSubmit} className=\"mt-10 grid gap-4\">\n        <div className=\"mb-4 flex flex-col gap-4\">\n          <Label htmlFor=\"folder_name\">File Name</Label>\n          <TextInput\n            id=\"folder_name\"\n            placeholder=\"Enter folder name\"\n            helperText={touched.name && errors.name}\n            {...getFieldProps(\"name\")}\n          />\n        </div>\n\n        <div className=\"mb-6 mt-20\">\n          <Button\n            type=\"submit\"\n            className=\"w-full lg:w-auto bg-primary-900 hover:bg-primary-700\"\n          >\n            Create Folder\n          </Button>\n        </div>\n\n        <Loader isLoading={isLoading as boolean} />\n      </form>\n    </div>\n  );\n};\n\nexport default CreateFolderForm;\n","import { IFolder, THandleDoubleClick } from \"types/folder\";\n\n\ninterface IAFolder {\n  handleFolderDoubleClick?: THandleDoubleClick;\n  folder?: IFolder;\n}\n\nconst Folder = (props: IAFolder) => {\n  const {\n    folder = {\n      _id: \"\",\n      name: \"\",\n      files: [],\n      __v: 0,\n    },\n    handleFolderDoubleClick = () => {},\n  } = props;\n\n  return (\n    <div\n      onClick={(e) => handleFolderDoubleClick(e, folder?._id)}\n      className=\"flex flex-col justify-center items-center gap-1 cursor-pointer hover:opacity-95\"\n    >\n      <img\n        className=\"w-24\"\n        src=\"/Mac_Folder_Icon.png\"\n        alt={`${folder?.name} folder icon`}\n      />\n      <p className=\"text-white w-20 pb-1 break-words\">{folder?.name}</p>\n    </div>\n  );\n};\n\nexport default Folder;\n","import { FormikHelpers, useFormik } from \"formik\";\nimport { Button, Label, TextInput } from \"flowbite-react\";\nimport Loader from \"components/Loader\";\nimport * as Yup from \"yup\";\n// import { useNavigate } from \"react-router\";\n// import MySwal from \"components/MySwal\";\n// import { useCreateFolderMutation } from \"store/apis/folder\";\n\ninterface ICreateFileFormInitialValues {\n  file: File | string;\n}\n\nexport type TCreateFileOnSubmit = (\n  values: ICreateFileFormInitialValues,\n  formikHelpers: FormikHelpers<ICreateFileFormInitialValues>\n) => void | Promise<any>;\n\ninterface ICreateFileForm {\n  // setOpenModal?: React.Dispatch<React.SetStateAction<\"default\" | undefined>>;\n  isShowFormTitle?: boolean;\n  onSubmit?: TCreateFileOnSubmit;\n  isLoading?: boolean;\n}\n\nconst CreateFileForm = ({\n  isShowFormTitle,\n  onSubmit = async () => {},\n  isLoading,\n}: ICreateFileForm) => {\n  // const [CreateFolder, { isLoading }] = useCreateFolderMutation();\n  // const navigate = useNavigate();\n\n  const { getFieldProps, setFieldValue, handleSubmit, errors, touched } =\n    useFormik<ICreateFileFormInitialValues>({\n      initialValues: {\n        file: \"\",\n      },\n      onSubmit,\n      validationSchema: Yup.object({\n        file: Yup.mixed().required(\"Required\"),\n      }),\n    });\n\n  return (\n    <div className=\"grid gap-4\">\n      {isShowFormTitle && (\n        <h2 className=\"text-2xl font-semibold leading-tight text-gray-800 dark:text-white\">\n          Create file\n        </h2>\n      )}\n      <form onSubmit={handleSubmit} className=\"mt-10 grid gap-4\">\n        <div className=\"mb-4 flex flex-col gap-4\">\n          <Label htmlFor=\"image\">File</Label>\n          <input\n            className=\"block w-full cursor-pointer rounded-lg border border-gray-300 bg-gray-50 text-sm text-gray-900 focus:outline-none dark:border-gray-600 dark:bg-gray-700 dark:text-gray-400 dark:placeholder-gray-400\"\n            id=\"file_input\"\n            type=\"file\"\n            name=\"file\"\n            // accept=\"image/*\"\n            onChange={(event: any) => {\n              setFieldValue(\"file\", event.currentTarget.files[0]);\n            }}\n            // value={formik?.values?.image?.name}\n          />\n          {touched.file && errors.file && (\n            <p className=\"text-red-500\">{errors.file}</p>\n          )}\n        </div>\n\n        <div className=\"mb-6 mt-20\">\n          <Button\n            type=\"submit\"\n            className=\"w-full lg:w-auto bg-primary-900 hover:bg-primary-700\"\n          >\n            Create File\n          </Button>\n        </div>\n\n        <Loader isLoading={isLoading as boolean} />\n      </form>\n    </div>\n  );\n};\n\nexport default CreateFileForm;\n","// interface IFile {\n//   name?: string;\n//   type?: string;\n//   url?: string;\n//   _id?: string;\n// }\n\nimport { IFile } from \"types/folder\";\n\n\nconst fetchRemoteFileAsBlob = async (fileUrl: string): Promise<Blob | null> => {\n  try {\n    const response = await fetch(fileUrl);\n    if (!response.ok) {\n      throw new Error(\"Failed to fetch the file.\");\n    }\n    const blob = await response.blob();\n    return blob;\n  } catch (error) {\n    console.error(\"Error fetching the file:\", error);\n    return null;\n  }\n};\n\nexport const convertToFile = async (\n  data?: IFile\n): Promise<File | null> => {\n  const blob = await fetchRemoteFileAsBlob(data?.fileUrl ?? \"\");\n  if (blob) {\n    const file = new File([blob], data?.fileName ?? \"\", { type: data?.fileType ?? \"\" });\n    return file;\n  } else {\n    return null;\n  }\n};\n\nexport const getThumbnailAndFile = async (fileData?: IFile) => {\n  const file = await convertToFile(fileData);\n  if (file) {\n    // Display the thumbnail using the temporary URL\n    const thumbnailUrl = URL.createObjectURL(file);\n    console.log(\"Thumbnail URL:\", thumbnailUrl);\n\n    // Get the original name of the file\n    const fileName = file.name;\n    console.log(\"File Name:\", fileName);\n\n    // Now you can use the file as needed, for example, upload it to a server.\n    console.log(\"Converted File:\", file);\n    return {\n      thumbnailUrl,\n      fileName,\n      originalFileUrl: fileData?.fileUrl ?? \"\",\n      id: fileData?._id ?? \"N/A\",\n    };\n  } else {\n    console.error(\"Failed to convert file.\");\n  }\n};\n\nexport const downloadFile = async ({\n  filename = \"\",\n  fileUrl = \"\",\n}: {\n  filename: string;\n  fileUrl: string;\n}) => {\n  try {\n    // Fetch the file data from the server using a ReadStream\n    const response = await fetch(fileUrl);\n    if (!response.ok) {\n      throw new Error(\"Failed to fetch the file.\");\n    }\n\n    // Read the response data as a Blob\n    const blob = await response.blob();\n\n    // Create a temporary anchor element\n    const anchor = document.createElement(\"a\");\n    anchor.href = URL.createObjectURL(blob);\n\n    // Set the download attribute and filename\n    anchor.setAttribute(\"download\", filename);\n\n    // Trigger the download\n    anchor.click();\n\n    // Cleanup the temporary anchor\n    URL.revokeObjectURL(anchor.href);\n  } catch (error) {\n    console.error(\"Error downloading the file:\", error);\n  }\n};\n","import { useCallback, useState, useEffect, useMemo } from \"react\";\nimport Loader from \"components/Loader\";\nimport ApiError from \"components/common/ApiError\";\nimport FetchingUi from \"components/common/FetchingUi\";\nimport QueryDataHandler from \"components/common/QueryDataHandler\";\nimport { BsCloudDownload } from \"react-icons/bs\";\nimport { MdDelete, MdDownload } from \"react-icons/md\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport {\n    useCreateFolderMutation,\n    useCreateNewFolderMutation,\n    useDeleteAFileMutation,\n    useGetFolderByIdQuery,\n    useUploadFileMutation,\n    useUpdateFolderMutation,\n} from \"store/apis/folder\";\nimport { AiFillFolderAdd, AiFillFileAdd } from \"react-icons/ai\";\nimport { Button, Card, Toast } from \"flowbite-react\";\nimport CustomModal from \"components/common/CustomModal\";\nimport CreateFolder from \"./create-folder\";\nimport CreateFolderForm, {\n    TCreateFolderOnSubmit,\n} from \"components/folder/CreateFolderForm\";\nimport MySwal from \"components/MySwal\";\nimport Folder from \"components/folder/Folder\";\nimport CreateFileForm, {\n    TCreateFileOnSubmit,\n} from \"components/folder/CreateFileForm\";\nimport { useUploadImageMutation } from \"store/apis/uploadImage\";\nimport {\n    convertToFile,\n    downloadFile,\n    getThumbnailAndFile,\n} from \"utils/file-formatter\";\nimport {\n    IViewFilesFolders,\n    THandleDoubleClick,\n    TThumbnailAndFile,\n} from \"types/folder\";\n\n// interface IFilesORFolders {\n//   _id: string;\n//   name: string;\n//   files: IFile[];\n//   folders: IFolder[];\n// }\n\n// interface IViewFolderORFileData {\n//   message: string;\n//   data: IFilesORFolders;\n// }\n\n// type TThumbnailAndFile =\n//   | {\n//       thumbnailUrl?: string;\n//       fileName?: string;\n//       originalFileUrl?: string;\n//       id?: string | number;\n//     }\n//   | undefined;\n\n// interface IViewFilesFolders {\n//   data?: IViewFolderORFileData;\n//   thumbnailAndFiles?: TThumbnailAndFile[];\n// }\n\nconst ViewFilesAndFolders = ({\n    data,\n    thumbnailAndFiles,\n}: IViewFilesFolders) => {\n    const { id } = useParams();\n    const navigate = useNavigate();\n    const [deleteAFile] = useDeleteAFileMutation();\n\n    const handleFolderDoubleClick: THandleDoubleClick = useCallback((e, id) => {\n        if (e?.detail === 2) {\n            console.log(\"folder double clicked\", e.detail);\n            navigate(`/dashboard/folders/${id}`);\n        }\n    }, []);\n\n    const handleFileDelete = async ({\n        fileId,\n        folderId,\n    }: {\n        folderId: string | number;\n        fileId: string | number;\n    }) => {\n        try {\n            await deleteAFile({ folderId, fileId }).unwrap();\n        } catch (error: any) {\n            console.log(\"error\", error);\n            MySwal.fire({\n                title: \"Error\",\n                text: error?.data?.message || \"Something went wrong\",\n                icon: \"error\",\n            });\n        }\n    };\n\n    const isFolderAvailable = !!data?.data?.folders?.length;\n    const isFilesAvailable = !!thumbnailAndFiles?.length;\n    return (\n        <div className=\"grid gap-10\">\n            <div className=\"grid gap-4\">\n                <h5 className=\"font-bold tracking-tight text-gray-900 dark:text-white mb-2\">\n                    {isFolderAvailable\n                        ? \"Available Folders\"\n                        : \"No Folder Found\"}\n                </h5>\n                {isFolderAvailable && (\n                    <div className=\"text-white flex flex-wrap gap-4\">\n                        {data?.data?.folders?.map((folder) => {\n                            return (\n                                <Folder\n                                    key={folder?._id}\n                                    folder={folder}\n                                    handleFolderDoubleClick={\n                                        handleFolderDoubleClick\n                                    }\n                                />\n                            );\n                        })}\n                    </div>\n                )}\n            </div>\n            <div className=\"grid gap-4\">\n                <h5 className=\"font-bold tracking-tight text-gray-900 dark:text-white mb-2\">\n                    {isFilesAvailable ? \"Available Files\" : \"No File Found\"}\n                </h5>\n                {isFilesAvailable && (\n                    <div className=\"text-white flex flex-wrap gap-8\">\n                        {thumbnailAndFiles?.map((thumbnailAndFile) => {\n                            const fileName =\n                                thumbnailAndFile?.fileName?.substring(0, 15);\n                            return (\n                                <>\n                                    <div\n                                        // className=\"w-full\"\n\n                                        className=\"max-w-[400px] grid gap-4\"\n                                    >\n                                        <div className=\" w-full h-[5rem] overflow-hidden \">\n                                            <img\n                                                className=\"w-full h-full aspect-square object-cover\"\n                                                src={\n                                                    thumbnailAndFile?.thumbnailUrl ??\n                                                    \"\"\n                                                }\n                                                alt={thumbnailAndFile?.fileName}\n                                            />\n                                        </div>\n                                        <h5 className=\"font-normal tracking-tight text-gray-900 dark:text-white break-all\">\n                                            {`${\n                                                fileName ? fileName + \"...\" : \"\"\n                                            }`}\n                                        </h5>\n                                        <div className=\"flex justify-between items-center gap-1\">\n                                            <button\n                                                onClick={() =>\n                                                    downloadFile({\n                                                        filename:\n                                                            thumbnailAndFile?.fileName ??\n                                                            \"\",\n                                                        fileUrl:\n                                                            thumbnailAndFile?.originalFileUrl ??\n                                                            \"\",\n                                                    })\n                                                }\n                                            >\n                                                <MdDownload className=\"w-4 h-4 text-green-500\" />\n                                            </button>\n                                            <button\n                                                onClick={() =>\n                                                    handleFileDelete({\n                                                        fileId:\n                                                            thumbnailAndFile?.id ??\n                                                            \"\",\n                                                        folderId: id ?? \"\",\n                                                    })\n                                                }\n                                            >\n                                                <MdDelete className=\"w-4 h-4 text-red-500\" />\n                                            </button>\n                                        </div>\n                                    </div>\n                                </>\n                            );\n                        })}\n                    </div>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default function ViewFolder() {\n    const [thumbnailAndFiles, setThumbnailAndFiles] = useState<\n        TThumbnailAndFile[]\n    >([]);\n\n    const { id } = useParams();\n    const navigate = useNavigate();\n    const { data, ...restRes } = useGetFolderByIdQuery(id);\n\n    // const [createFolder, { isLoading }] = useCreateFolderMutation();\n    const [createNewFolder, { isLoading }] = useCreateNewFolderMutation();\n\n    const handleFolderDoubleClick: THandleDoubleClick = useCallback((e, id) => {\n        if (e?.detail === 2) {\n            console.log(\"folder double clicked\", e.detail);\n            navigate(`/dashboard/folders/${id}`);\n        }\n    }, []);\n\n    const [uploadFile] = useUploadFileMutation();\n    const [uploadImage] = useUploadImageMutation();\n    // const [deleteAFile] = useDeleteAFileMutation();\n\n    const processedPromises = useMemo(() => {\n        const files = data?.data?.files;\n        const tempConvertedFiles: TThumbnailAndFile[] = [];\n        const promises = files?.map((file) => getThumbnailAndFile(file));\n\n        if (promises) {\n            return Promise.all(promises).then((thumbnailAndFiles) => {\n                tempConvertedFiles.push(...thumbnailAndFiles);\n                return tempConvertedFiles;\n            });\n        } else {\n            return tempConvertedFiles;\n        }\n    }, [data]);\n\n    useEffect(() => {\n        (async () => {\n            const processedFilesArray = await processedPromises;\n            setThumbnailAndFiles(processedFilesArray);\n        })();\n    }, [processedPromises]);\n    console.log(\"ThumbnailAndFiles: \", thumbnailAndFiles);\n\n    // const handleFileDelete = ({\n    //   fileId,\n    //   folderId,\n    // }: {\n    //   folderId: string | number;\n    //   fileId: string | number;\n    // }) => {\n    //   deleteAFile({ folderId, fileId });\n    // };\n\n    return (\n        <div className=\"text-white\">\n            <QueryDataHandler\n                {...restRes}\n                loadingUi={<Loader isLoading={restRes?.isLoading} />}\n                fetchingUi={<FetchingUi />}\n                errorUi={<ApiError />}\n                ui={\n                    <div className=\"space-y-4\">\n                        <div className=\"flex justify-start gap-2\">\n                            <CustomModal\n                                title=\"Add Folder\"\n                                trigger={\n                                    <Button\n                                        // onClick={handleFolderAdd}\n                                        type=\"button\"\n                                        color=\"light\"\n                                    >\n                                        <AiFillFolderAdd className=\"w-5 h-5 fill-[#69CAF7] cursor-pointer mr-1\" />{\" \"}\n                                        Add Folder\n                                    </Button>\n                                }\n                            >\n                                {({ setOpenModal }) => {\n                                    const onSubmit: TCreateFolderOnSubmit =\n                                        async (values) => {\n                                            console.log(\"parent id: \", id);\n                                            try {\n                                                await createNewFolder({\n                                                    parent_id: id,\n                                                    name: values.name,\n                                                }).unwrap();\n                                                MySwal.fire({\n                                                    title: \"Success\",\n                                                    text: \"Folder added successfully\",\n                                                    icon: \"success\",\n                                                });\n                                                setOpenModal?.(undefined);\n                                            } catch (error: any) {\n                                                MySwal.fire({\n                                                    title: \"Error\",\n                                                    text:\n                                                        error?.data?.message ||\n                                                        \"Something went wrong\",\n                                                    icon: \"error\",\n                                                });\n                                            }\n                                        };\n\n                                    return (\n                                        <CreateFolderForm\n                                            isLoading={isLoading}\n                                            onSubmit={onSubmit}\n                                        />\n                                    );\n                                }}\n                            </CustomModal>\n\n                            <CustomModal\n                                title=\"Add File\"\n                                trigger={\n                                    <Button\n                                        // onClick={handleFileAdd}\n                                        type=\"button\"\n                                        color=\"light\"\n                                    >\n                                        <AiFillFileAdd className=\"w-5 h-5 fill-[#69CAF7] cursor-pointer mr-1\" />{\" \"}\n                                        Add File\n                                    </Button>\n                                }\n                            >\n                                {/* new */}\n                                {({ setOpenModal }) => {\n                                    const onSubmit: TCreateFileOnSubmit =\n                                        async (values) => {\n                                            console.log(\"parent id: \", id);\n                                            try {\n                                                const formData = new FormData();\n                                                formData.append(\n                                                    \"file\",\n                                                    values.file\n                                                );\n\n                                                const { data } =\n                                                    await uploadImage(\n                                                        formData\n                                                    ).unwrap();\n                                                console.log(\n                                                    \"upload Image: \",\n                                                    data\n                                                );\n\n                                                const submittedValue = {\n                                                    id,\n                                                    files: [\n                                                        {\n                                                            fileName:\n                                                                data?.[0]\n                                                                    ?.fileName,\n                                                            fileType:\n                                                                data?.[0]\n                                                                    ?.fileType,\n                                                            fileUrl:\n                                                                data?.[0]\n                                                                    ?.fileUrl,\n                                                        },\n                                                    ],\n                                                };\n\n                                                await uploadFile(\n                                                    submittedValue\n                                                ).unwrap();\n                                                MySwal.fire({\n                                                    title: \"Success\",\n                                                    text: \"File added successfully\",\n                                                    icon: \"success\",\n                                                });\n                                                setOpenModal?.(undefined);\n                                            } catch (error: any) {\n                                                MySwal.fire({\n                                                    title: \"Error\",\n                                                    text:\n                                                        error?.data?.message ||\n                                                        \"Something went wrong\",\n                                                    icon: \"error\",\n                                                });\n                                            }\n                                        };\n\n                                    return (\n                                        <CreateFileForm\n                                            isLoading={isLoading}\n                                            onSubmit={onSubmit}\n                                        />\n                                    );\n                                }}\n                            </CustomModal>\n                        </div>\n\n                        <ViewFilesAndFolders\n                            data={data}\n                            thumbnailAndFiles={thumbnailAndFiles}\n                        />\n                    </div>\n                }\n            />\n        </div>\n    );\n}\n","import {\n    ICreateFolderArg,\n    ICreateFolderRes,\n    IFileDeleteArgs,\n    IFoldersData,\n    IViewFolderORFileData,\n    TViewFolderORFileDataArg,\n} from \"types/folder\";\nimport { apiSlice } from \"..\";\n\nexport const folderApiSlice = apiSlice.injectEndpoints({\n    endpoints: (builder) => ({\n        createFolder: builder.mutation<ICreateFolderRes, ICreateFolderArg>({\n            query: (body) => ({\n                url: \"/folders\",\n                method: \"POST\",\n                body,\n            }),\n            invalidatesTags: [\"folders\"],\n        }),\n        // new\n        createNewFolder: builder.mutation({\n            query: (body) => ({\n                url: `/folders`,\n                method: \"POST\",\n                body,\n            }),\n            invalidatesTags: [\"folders\"],\n        }),\n        getFolders: builder.query<IFoldersData, void>({\n            query: () => ({\n                url: \"/folders?noParent=true\",\n                method: \"GET\",\n            }),\n            providesTags: [\"folders\"],\n        }),\n        getFolderById: builder.query<\n            IViewFolderORFileData,\n            TViewFolderORFileDataArg\n        >({\n            query: (id) => ({\n                url: `/folders/${id}`,\n                method: \"GET\",\n            }),\n            providesTags: [\"folders\"],\n        }),\n        updateFolder: builder.mutation({\n            query: ({ id, ...body }) => ({\n                url: `/folders/${id}`,\n                method: \"PUT\",\n                body,\n            }),\n            invalidatesTags: [\"folders\"],\n        }),\n        uploadFile: builder.mutation({\n            query: ({ id, ...body }) => ({\n                url: `/folders/files/${id}`,\n                method: \"POST\",\n                body,\n            }),\n            invalidatesTags: [\"folders\"],\n        }),\n        deleteAFile: builder.mutation<any, IFileDeleteArgs>({\n            query: ({ folderId, fileId }) => ({\n                url: `/folders/delete-files`,\n                body: { folderId, fileId },\n                method: \"POST\",\n            }),\n            invalidatesTags: [\"folders\"],\n        }),\n        deleteFolder: builder.mutation({\n            query: (id) => ({\n                url: `/folders/${id}`,\n                method: \"DELETE\",\n            }),\n            invalidatesTags: [\"folders\"],\n        }),\n    }),\n});\n\nexport const {\n    useCreateFolderMutation,\n    useGetFoldersQuery,\n    useGetFolderByIdQuery,\n    useUpdateFolderMutation,\n    useDeleteFolderMutation,\n    useUploadFileMutation,\n    useCreateNewFolderMutation,\n    useDeleteAFileMutation,\n} = folderApiSlice;\n","import { apiSlice } from \"..\";\n\nexport const uploadImage = apiSlice.injectEndpoints({\n  endpoints: (builder) => ({\n    uploadImage: builder.mutation({\n      query: (body) => ({\n        url: \"/files/upload-image\",\n        method: \"POST\",\n        body,\n      }),\n    }),\n  }),\n});\n\nexport const { useUploadImageMutation } = uploadImage;\n"],"names":["_ref","error","_jsx","className","children","CustomModal","trigger","title","_useState","useState","_useState2","_slicedToArray","openModal","setOpenModal","console","log","_jsxs","_Fragment","onClick","Modal","show","onClose","undefined","Header","Body","props","isLoading","isError","isFetching","isSuccess","ui","loadingUi","fetchingUi","errorUi","paginationUi","isShowFormTitle","_ref$onSubmit","onSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","stop","_useFormik","useFormik","initialValues","name","validationSchema","Yup","required","getFieldProps","handleSubmit","errors","touched","Label","htmlFor","TextInput","_objectSpread","id","placeholder","helperText","Button","type","Loader","_props$folder","folder","_id","files","__v","_props$handleFolderDo","handleFolderDoubleClick","e","src","alt","concat","file","setFieldValue","onChange","event","currentTarget","fetchRemoteFileAsBlob","fileUrl","response","blob","fetch","sent","ok","Error","abrupt","t0","_x","apply","arguments","convertToFile","_ref2","_callee2","data","_data$fileUrl","_data$fileName","_data$fileType","_context2","File","fileName","fileType","_x2","getThumbnailAndFile","_ref3","_callee3","fileData","_fileData$fileUrl","_fileData$_id","thumbnailUrl","_context3","URL","createObjectURL","originalFileUrl","_x3","downloadFile","_ref5","_callee4","_ref4","_ref4$filename","filename","_ref4$fileUrl","anchor","_context4","document","createElement","href","setAttribute","click","revokeObjectURL","_x4","ViewFilesAndFolders","_data$data","_data$data$folders","_data$data2","_data$data2$folders","thumbnailAndFiles","useParams","navigate","useNavigate","_useDeleteAFileMutati","useDeleteAFileMutation","deleteAFile","useCallback","detail","handleFileDelete","fileId","folderId","_error$data","unwrap","MySwal","fire","text","message","icon","isFolderAvailable","folders","length","isFilesAvailable","map","Folder","thumbnailAndFile","_thumbnailAndFile$fil","_thumbnailAndFile$thu","substring","_thumbnailAndFile$fil2","_thumbnailAndFile$ori","MdDownload","_thumbnailAndFile$id","MdDelete","ViewFolder","setThumbnailAndFiles","_useGetFolderByIdQuer","useGetFolderByIdQuery","restRes","_objectWithoutProperties","_excluded","_useCreateNewFolderMu","useCreateNewFolderMutation","_useCreateNewFolderMu2","createNewFolder","_useUploadFileMutatio","useUploadFileMutation","uploadFile","_useUploadImageMutati","useUploadImageMutation","uploadImage","processedPromises","useMemo","_data$data3","tempConvertedFiles","promises","Promise","all","then","push","_toConsumableArray","useEffect","processedFilesArray","QueryDataHandler","FetchingUi","ApiError","color","AiFillFolderAdd","_ref6","values","_error$data2","parent_id","CreateFolderForm","AiFillFileAdd","_ref7","_ref8","_data$","_data$2","_data$3","formData","_yield$uploadImage$un","_data","submittedValue","_error$data3","FormData","append","CreateFileForm","folderApiSlice","apiSlice","injectEndpoints","endpoints","builder","createFolder","mutation","query","body","url","method","invalidatesTags","getFolders","providesTags","getFolderById","updateFolder","_excluded2","deleteFolder","useCreateFolderMutation","useGetFoldersQuery","useUpdateFolderMutation","useDeleteFolderMutation"],"sourceRoot":""}