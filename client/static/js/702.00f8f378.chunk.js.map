{"version":3,"file":"static/js/702.00f8f378.chunk.js","mappings":"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","sources":["screens/event/index.tsx","store/apis/event/index.ts","utils/date-formatter.ts"],"sourcesContent":["import { Button } from \"flowbite-react\";\nimport { useNavigate } from \"react-router\";\nimport { useDeleteTeamMutation, useGetTeamsQuery } from \"store/apis/team\";\nimport DataTable, { TableColumn } from \"react-data-table-component\";\nimport MySwal from \"components/MySwal\";\nimport { useDeleteEventMutation, useGetEventsQuery } from \"store/apis/event\";\nimport { formatShortSocialDateTime } from \"utils/date-formatter\";\nimport { IEvent, IEventAction } from \"types/event\";\n\n// interface IEvent {\n//   _id?: string;\n//   name?: string;\n//   team_id?: string;\n//   starting_date?: string;\n//   ending_date?: string;\n//   __v?: number;\n// }\n\n// interface IEventAction {\n//   row?: IEvent;\n// }\n\n// interface ITeamData {\n//   message?: string;\n//   data?: IEvent[];\n// }\n\nconst Actions = ({ row }: IEventAction) => {\n  const navigate = useNavigate();\n  const [deleteEvent, { isLoading }] = useDeleteEventMutation();\n\n  const handleDelete = async () => {\n    MySwal.fire({\n      title: \"Are you sure?\",\n      text: \"You will not be able to recover this event!\",\n      icon: \"warning\",\n      showCancelButton: true,\n      confirmButtonText: \"Yes, delete it!\",\n      cancelButtonText: \"No, keep it\",\n    }).then(async (result) => {\n      if (result.isConfirmed) {\n        await deleteEvent(row?._id).unwrap();\n        MySwal.fire(\"Deleted!\", \"Event has been deleted.\", \"success\");\n      } else if (result.dismiss === MySwal.DismissReason.cancel) {\n        MySwal.fire(\"Cancelled\", \"Event is safe :)\", \"error\");\n      }\n    });\n  };\n\n  return (\n    <div className=\"flex gap-2 justify-center items-center\">\n      <Button\n        onClick={() => navigate(`/dashboard/events/${row?._id}`)}\n        className=\"bg-primary-900 hover:bg-primary-700\"\n      >\n        Edit\n      </Button>\n      <Button onClick={handleDelete} className=\"bg-red-800 hover:bg-red-600\">\n        Delete\n      </Button>\n    </div>\n  );\n};\n\nconst columns: TableColumn<IEvent>[] = [\n  {\n    name: \"Name\",\n    selector: (row) => row?.name || \"\",\n    width: \"180px\",\n    wrap: true,\n  },\n  {\n    name: \"Team ID\",\n    // @ts-ignore\n    selector: (row) => row?.team_id?.name || 0,\n    wrap: true,\n  },\n  {\n    name: \"Starting Date\",\n    selector: (row) => formatShortSocialDateTime(row?.starting_date || \"\"),\n    minWidth: \"200px\",\n    wrap: true,\n  },\n  {\n    name: \"Ending Date\",\n    selector: (row) => formatShortSocialDateTime(row?.ending_date || \"\"),\n    minWidth: \"200px\",\n    wrap: true,\n  },\n  {\n    name: \"Actions\",\n    cell: (row) => <Actions row={row} />,\n    width: \"180px\",\n  },\n];\n\nexport default function Data() {\n  const { data, isLoading, isError } = useGetEventsQuery();\n  const navigate = useNavigate();\n\n\n\n  return (\n    <div>\n      <div className=\"flex justify-end\">\n        <Button\n          onClick={() => navigate(\"/dashboard/events/create\")}\n          className=\"bg-primary-900 hover:bg-primary-700\"\n        >\n          Create Event\n        </Button>\n      </div>\n      <div className=\"mt-4\">\n        <DataTable\n          columns={columns}\n          data={data?.data ?? []}\n          progressPending={isLoading}\n          progressComponent={\n            <div className=\"flex justify-center\">\n              <div className=\"animate-spin rounded-full h-32 w-32 border-t-2 border-b-2 border-gray-900\"></div>\n            </div>\n          }\n          theme=\"dark\"\n          pagination\n          paginationPerPage={10}\n          paginationRowsPerPageOptions={[10, 20, 30]}\n          customStyles={{\n            headCells: {\n              style: {\n                paddingLeft: \"1rem\",\n                paddingRight: \"1rem\",\n                paddingTop: \"1rem\",\n                paddingBottom: \"1rem\",\n                backgroundColor: \"#1F2937\",\n                color: \"#fff\",\n                minHeight: \"72px\",\n              },\n            },\n            cells: {\n              style: {\n                paddingLeft: \"1rem\",\n                paddingRight: \"1rem\",\n                paddingTop: \"1rem\",\n                paddingBottom: \"1rem\",\n                minHeight: \"80px\",\n              },\n            },\n          }}\n        />\n      </div>\n    </div>\n  );\n}\n","import { apiSlice } from \"..\";\nimport {\n  ICreateEventResponse,\n  IEventsData,\n  ISingleEventData,\n  ICreateEventArgs,\n  TSingleEventDataArg,\n  IDeleteEventResponse,\n  TDeleteEventArg,\n  TUpdateEventRes,\n  IUpdateEventArgs,\n} from \"types/event\";\n\nexport const eventApiSlice = apiSlice.injectEndpoints({\n  endpoints: (builder) => ({\n    createEvent: builder.mutation<ICreateEventResponse, ICreateEventArgs>({\n      query: (body) => ({\n        url: \"/events/create\",\n        method: \"POST\",\n        body,\n      }),\n      invalidatesTags: [\"events\"],\n    }),\n    // work here\n    getEvents: builder.query<IEventsData, void>({\n      query: () => ({\n        url: \"/events/all\",\n        method: \"GET\",\n      }),\n      providesTags: [\"events\"],\n    }),\n    getEventById: builder.query<ISingleEventData, TSingleEventDataArg>({\n      query: ({ id }) => ({\n        url: `/events/single/${id}`,\n        method: \"GET\",\n      }),\n      providesTags: [\"singleEvent\"],\n    }),\n    updateEvent: builder.mutation<TUpdateEventRes, IUpdateEventArgs>({\n      query: ({ id, ...body }) => ({\n        url: `/events/update/${id}`,\n        method: \"PUT\",\n        body,\n      }),\n      invalidatesTags: [\"events\", \"singleEvent\"],\n    }),\n    deleteEvent: builder.mutation<IDeleteEventResponse, TDeleteEventArg>({\n      query: (id) => ({\n        url: `/events/remove/${id}`,\n        method: \"DELETE\",\n      }),\n      invalidatesTags: (result, error, arg) => {\n        return [{ type: \"events\" }];\n      },\n    }),\n  }),\n});\n\nexport const {\n  useCreateEventMutation,\n  useGetEventsQuery,\n  useGetEventByIdQuery,\n  useUpdateEventMutation,\n  useDeleteEventMutation,\n} = eventApiSlice;\n","export const formatShortSocialDateTime = (dateString?: string) => {\n  if (!dateString) return \"\";\n  const date = new Date(dateString);\n  const options: Intl.DateTimeFormatOptions = {\n    year: \"numeric\",\n    month: \"short\",\n    day: \"numeric\",\n    hour: \"numeric\",\n    minute: \"numeric\",\n    hour12: true,\n  };\n  return date.toLocaleString(\"en-US\", options);\n};\n"],"names":["Actions","_ref","row","navigate","useNavigate","_useDeleteEventMutati","useDeleteEventMutation","_useDeleteEventMutati2","_slicedToArray","deleteEvent","handleDelete","isLoading","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","wrap","_context2","prev","next","MySwal","fire","title","text","icon","showCancelButton","confirmButtonText","cancelButtonText","then","_ref3","_callee","result","_context","isConfirmed","_id","unwrap","dismiss","DismissReason","cancel","stop","_x","apply","arguments","_jsxs","className","children","_jsx","Button","onClick","concat","columns","name","selector","width","_row$team_id","team_id","formatShortSocialDateTime","starting_date","minWidth","ending_date","cell","Data","_data$data","_useGetEventsQuery","useGetEventsQuery","data","isError","DataTable","progressPending","progressComponent","theme","pagination","paginationPerPage","paginationRowsPerPageOptions","customStyles","headCells","style","paddingLeft","paddingRight","paddingTop","paddingBottom","backgroundColor","color","minHeight","cells","eventApiSlice","apiSlice","injectEndpoints","endpoints","builder","createEvent","mutation","query","body","url","method","invalidatesTags","getEvents","providesTags","getEventById","id","updateEvent","_objectWithoutProperties","_excluded","error","arg","type","useCreateEventMutation","useGetEventByIdQuery","useUpdateEventMutation","dateString","Date","toLocaleString","year","month","day","hour","minute","hour12"],"sourceRoot":""}