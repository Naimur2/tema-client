{"version":3,"file":"static/js/149.4470d7e0.chunk.js","mappings":"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","sources":["screens/team/create-team.tsx","store/apis/team/index.ts","store/apis/uploadImage/index.ts"],"sourcesContent":["import React from \"react\";\nimport { useFormik } from \"formik\";\nimport { Button, FileInput, Label, TextInput } from \"flowbite-react\";\nimport Loader from \"components/Loader\";\nimport { useCreateTeamMutation } from \"store/apis/team\";\nimport * as Yup from \"yup\";\nimport { useNavigate } from \"react-router\";\nimport MySwal from \"components/MySwal\";\nimport { useUploadImageMutation } from \"store/apis/uploadImage\";\nimport { ITeamInitialValues } from \"types/team\";\n\n// interface ITeamInitialValues {\n//   name: string;\n//   color: string;\n//   score: number;\n//   image: undefined | File | string;\n// }\n\nexport default function CreateItem() {\n    const [addTeam, { isLoading }] = useCreateTeamMutation();\n    const [uploadImage, { isLoading: isUploading }] = useUploadImageMutation();\n\n    const navigate = useNavigate();\n    const { getFieldProps, handleSubmit, setFieldValue, errors, touched } =\n        useFormik<ITeamInitialValues>({\n            initialValues: {\n                name: \"\",\n                color: \"\",\n                score: 0,\n                image: undefined,\n            },\n            onSubmit: async (values: any) => {\n                try {\n                    const formData = new FormData();\n                    formData.append(\"image\", values.image);\n\n                    const { data } = await uploadImage(formData).unwrap();\n\n                    const submittedValue = {\n                        name: values.name,\n                        color: values.color,\n                        score: values.score,\n                        image: data?.[0].fileUrl,\n                    };\n\n                    await addTeam(submittedValue).unwrap();\n                    MySwal.fire({\n                        title: \"Success\",\n                        text: \"Team created successfully\",\n                        icon: \"success\",\n                    });\n                    navigate(-1);\n                } catch (error: any) {\n                    MySwal.fire({\n                        title: \"Error\",\n                        text: error?.data?.message || \"Something went wrong\",\n                        icon: \"error\",\n                    });\n                }\n            },\n            validationSchema: Yup.object({\n                name: Yup.string().required(\"Required\"),\n                color: Yup.string().required(\"Required\"),\n                score: Yup.string().required(\"Required\"),\n                image: Yup.string().required(\"Required\"),\n            }),\n        });\n\n    return (\n        <div className=\"grid gap-4\">\n            <h2 className=\"text-2xl font-semibold leading-tight text-gray-800 dark:text-white\">\n                Create Team\n            </h2>\n            <form onSubmit={handleSubmit} className=\"mt-10\">\n                <div className=\"mb-4 flex flex-col\">\n                    <Label htmlFor=\"name\">Team Name</Label>\n                    <TextInput\n                        id=\"name\"\n                        placeholder=\"Enter team name\"\n                        helperText={touched.name && errors.name}\n                        {...getFieldProps(\"name\")}\n                    />\n                </div>\n                <div className=\"mb-4 flex flex-col\">\n                    <Label htmlFor=\"color\">Team color</Label>\n                    <input\n                        id=\"color\"\n                        placeholder=\"Enter team color\"\n                        className=\"w-full  border border-gray-300 rounded-md h-10\"\n                        type=\"color\"\n                        {...getFieldProps(\"color\")}\n                    />\n                    {touched.color && errors.color && (\n                        <p className=\"text-red-500\">{errors.color}</p>\n                    )}\n                </div>\n\n                <div className=\"mb-4 flex flex-col\">\n                    <Label htmlFor=\"score\">Team score</Label>\n                    <TextInput\n                        id=\"score\"\n                        placeholder=\"Enter team score\"\n                        helperText={touched.score && errors.score}\n                        {...getFieldProps(\"score\")}\n                        type=\"number\"\n                    />\n                </div>\n\n                <div className=\"mb-4 flex flex-col\">\n                    <Label htmlFor=\"image\">Team image</Label>\n                    <input\n                        className=\"block w-full cursor-pointer rounded-lg border border-gray-300 bg-gray-50 text-sm text-gray-900 focus:outline-none dark:border-gray-600 dark:bg-gray-700 dark:text-gray-400 dark:placeholder-gray-400\"\n                        id=\"file_input\"\n                        type=\"file\"\n                        name=\"image\"\n                        accept=\"image/*\"\n                        onChange={(event: any) => {\n                            setFieldValue(\n                                \"image\",\n                                event.currentTarget.files[0]\n                            );\n                        }}\n                        // value={formik?.values?.image?.name}\n                    />\n                    {touched.image && errors.image && (\n                        <p className=\"text-red-500\">{errors.image}</p>\n                    )}\n                </div>\n\n                <div className=\"mb-6 mt-20\">\n                    <Button\n                        type=\"submit\"\n                        className=\"w-full lg:w-auto bg-primary-900 hover:bg-primary-700\"\n                    >\n                        Create Team\n                    </Button>\n                </div>\n                <Loader isLoading={isLoading || isUploading} />\n            </form>\n        </div>\n    );\n}\n","import {\n  ICreateTeamRes,\n  TDeleteTeamArg,\n  IDeleteTeamResponse,\n  ITeamData,\n  ITeamsData,\n  IUpdateTeamArgs,\n  IUpdateTeamRes,\n  TCreateTeamArgs,\n  TTeamDataArg,\n} from \"types/team\";\nimport { apiSlice } from \"..\";\n\nexport const teamApiSlice = apiSlice.injectEndpoints({\n  endpoints: (builder) => ({\n    createTeam: builder.mutation<ICreateTeamRes, TCreateTeamArgs>({\n      query: (body) => ({\n        url: \"/teams\",\n        method: \"POST\",\n        body,\n      }),\n      invalidatesTags: [\"teams\"],\n    }),\n    getTeams: builder.query<ITeamsData, void>({\n      query: () => ({\n        url: \"/teams\",\n        method: \"GET\",\n      }),\n      providesTags: [\"teams\"],\n    }),\n    getTeamById: builder.query<ITeamData, TTeamDataArg>({\n      query: (id) => ({\n        url: `/teams/${id}`,\n        method: \"GET\",\n      }),\n      providesTags: [\"teams\"],\n    }),\n    updateTeam: builder.mutation<IUpdateTeamRes, IUpdateTeamArgs>({\n      query: ({ id, ...body }) => ({\n        url: `/teams/${id}`,\n        method: \"PUT\",\n        body,\n      }),\n      invalidatesTags: [\"teams\"],\n    }),\n    deleteTeam: builder.mutation<IDeleteTeamResponse, TDeleteTeamArg>({\n      query: (id) => ({\n        url: `/teams/${id}`,\n        method: \"DELETE\",\n      }),\n      invalidatesTags: [\"teams\"],\n    }),\n  }),\n});\n\nexport const {\n  useCreateTeamMutation,\n  useGetTeamsQuery,\n  useGetTeamByIdQuery,\n  useUpdateTeamMutation,\n  useDeleteTeamMutation,\n} = teamApiSlice;\n","import { apiSlice } from \"..\";\n\nexport const uploadImage = apiSlice.injectEndpoints({\n  endpoints: (builder) => ({\n    uploadImage: builder.mutation({\n      query: (body) => ({\n        url: \"/files/upload-image\",\n        method: \"POST\",\n        body,\n      }),\n    }),\n  }),\n});\n\nexport const { useUploadImageMutation } = uploadImage;\n"],"names":["CreateItem","_useCreateTeamMutatio","useCreateTeamMutation","_useCreateTeamMutatio2","_slicedToArray","addTeam","isLoading","_useUploadImageMutati","useUploadImageMutation","_useUploadImageMutati2","uploadImage","isUploading","navigate","useNavigate","_useFormik","useFormik","initialValues","name","color","score","image","undefined","onSubmit","_onSubmit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","formData","_yield$uploadImage$un","data","submittedValue","_error$data","wrap","_context","prev","next","FormData","append","unwrap","sent","fileUrl","MySwal","fire","title","text","icon","t0","message","stop","_x","apply","arguments","validationSchema","Yup","required","getFieldProps","handleSubmit","setFieldValue","errors","touched","_jsxs","className","children","_jsx","Label","htmlFor","TextInput","_objectSpread","id","placeholder","helperText","type","accept","onChange","event","currentTarget","files","Button","Loader","teamApiSlice","apiSlice","injectEndpoints","endpoints","builder","createTeam","mutation","query","body","url","method","invalidatesTags","getTeams","providesTags","getTeamById","concat","updateTeam","_ref","_objectWithoutProperties","_excluded","deleteTeam","useGetTeamsQuery","useGetTeamByIdQuery","useUpdateTeamMutation","useDeleteTeamMutation"],"sourceRoot":""}